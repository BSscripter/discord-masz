{% block body %}
<nav class="mb-1 navbar navbar-expand-lg navbar-dark" style="background-color: #5E5B52;">
    <div class="container">
        <a class="navbar-brand" href="/">ModTool</a>
        <button class="navbar-toggler collapsed" type="button" data-toggle="collapse"
                data-target="#navbarSupportedContent-3" aria-controls="navbarSupportedContent-3" aria-expanded="false"
                aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse" id="navbarSupportedContent-3" style="">
            <ul class="navbar-nav mr-auto">
                {% if basic_data.currentGuild|default %}
                    <li class="nav-item">
                        <a class="nav-link waves-effect waves-light" href="/">Guilds</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link waves-effect waves-light" href="/modcases/{{ basic_data.currentGuild }}">ModCases</a>
                    </li>
                    {% if basic_data.currentGuild in basic_data.loggedInUser.modGuilds or basic_data.loggedInUser.isAdmin %}
                        <li class="nav-item">
                            <a class="nav-link waves-effect waves-light" href="/modcases/{{ basic_data.currentGuild }}/new">New ModCase</a>
                        </li>
                    {% endif %}
                {% else %}
                    <li class="nav-item">
                        <a class="nav-link waves-effect waves-light" href="/">Guilds</a>
                    </li>
                    {% if basic_data.loggedInUser.isAdmin %}
                        <li class="nav-item">
                            <a class="nav-link waves-effect waves-light" href="/newguild">Register guild</a>
                        </li>
                    {% endif %}
                {% endif %}
            </ul>
            {% if basic_data.loggedInUser|default %}
                <ul class="navbar-nav ml-auto nav-flex-icons">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle waves-effect waves-light" id="navbarDropdownMenuLink"
                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <img
                                    src="{{ basic_data.loggedInUser.discordUser.imageUrl }}"
                                    class="rounded-circle z-depth-0 mr-1"
                                    alt="avatar image"
                                    height="30"
                            />
                        </a>
                        <div class="dropdown-menu dropdown-menu-right dropdown-default"
                             aria-labelledby="navbarDropdownMenuLink">
                            <span class="dropdown-item waves-effect waves-light">
                                Logged in as <span
                                        class="text-danger">{{ basic_data.loggedInUser.discordUser.username }}#{{ basic_data.loggedInUser.discordUser.discriminator }}</span>
                            </span>
                            {% if basic_data.loggedInUser.isAdmin %}
                                <span class="dropdown-item waves-effect waves-light text-primary">
                                Congratulations, you are a site admin!
                            </span>
                            {% endif %}
                            <span class="dropdown-item waves-effect waves-light" onclick="window.location.href='/api/v1/logout';">
                               Logout
                            </span>
                        </div>
                    </li>
                </ul>
            {% endif %}
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-elegant px-3" data-toggle="modal" data-target="#popupPatchNotes">
                <i class="fas fa-code-branch" aria-hidden="true"></i>
            </button>
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-elegant px-3" data-toggle="modal" data-target="#popupUserSettings">
                <i class="fas fa-sliders-h" aria-hidden="true"></i>
            </button>
        </div>
    </div>
</nav>
<div class="modal fade" id="popupPatchNotes" tabindex="-1" role="dialog" aria-labelledby="popupPatchNotesLabel"
     aria-hidden="true">

    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title w-100" id="popupPatchNotesLabel">Patch Notes</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                {% for note in basic_data.patchNotes|default([])|slice(0, 3) %}
                    <div class="card mb-3">
                        <div class="card-body">
                            {% if note.title|default %}
                                <h4 class="card-title"><a>{{ note.title|raw|markdown_to_html  }}</a></h4>
                            {% endif %}
                            <p class="card-text">{{ note.body|raw|markdown_to_html }}</p>
                        </div>
                    </div>
                {% endfor %}
                {% if not basic_data.patchNotes|default %}
                    <p class="text-danger">Failed to load Patch Notes.</p>
                {% elseif basic_data.patchNotes|length > 3 %}
                    <a href="https://github.com/zaanposni/discord-masz/releases" target="_blank" class="text-success">See more patch notes here.</a>
                {% endif %}
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="popupUserSettings" tabindex="-1" role="dialog" aria-labelledby="popupUserSettingsLabel"
     aria-hidden="true">

    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title w-100" id="popupUserSettingsLabel">Settings</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="darkModeToggle" onclick="darkModeToggle(this)">
                    <label class="custom-control-label" for="darkModeToggle">Use dark mode</label>
                </div>
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="suggestionToggle" onclick="suggestionsToggle(this)">
                    <label class="custom-control-label" for="suggestionToggle">Hide suggestions and tips</label>
                </div>
            </div>
        </div>
    </div>
</div>
<br>
<div class="container">
    {% if basic_data.errors|default %}
        {% if basic_data.errors is not empty%}
            <div class="card mt-3 text-danger background-blink" id="fade-it">
                <div class="card-body">
                    <h5 class="card-title font-weight-bold">An Error occurred</h5>
                    {% for message in basic_data.errors %}
                        <span class="card-text" style="white-space: pre-wrap;">{{ message }}</span><br/>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
    {% endif %}
</div>

<br>
{% endblock body %}
{% block scriptblock %}

    <script>
        function readCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for(var i=0;i < ca.length;i++) {
                var c = ca[i];
                while (c.charAt(0)==' ') c = c.substring(1,c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
            }
            return null;
        }

        function setCookie(name,value,days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days*24*60*60*1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "")  + expires + "; path=/";
        }

        $(document).ready(function () {
            let darkMode = readCookie('darkmode');
            if (darkMode === 'true' || darkMode === null) {  // default dark
                $('#darkmode').attr('disabled', false);
                $('#darkModeToggle').prop('checked', true);
            } else {
                $('#darkmode').attr('disabled', true);
                $('#darkModeToggle').prop('checked', false);
            }
            let suggestions = readCookie('suggestions');
            console.log(suggestions);
            if (suggestions === 'true' || suggestions === null) {  // default show
                $('#suggestions').attr("style", "display: block");
                $('#suggestionToggle').prop('checked', false);
            } else {
                $('#suggestions').attr("style", "display: none!important");
                $('#suggestionToggle').prop('checked', true);
            }
        });

        function darkModeToggle(button) {
            let isChecked = $(button).is(":checked")
            if (isChecked) {
                $('#darkmode').attr('disabled', false);
                setCookie('darkmode', 'true', 99999);
            } else {
                $('#darkmode').attr('disabled', true);
                setCookie('darkmode', 'false', 99999);
            }
        }

        function suggestionsToggle(button) {
            let isChecked = $(button).is(":checked")
            if (isChecked) {
                $('#suggestions').attr("style", "display: none!important");
                setCookie('suggestions', 'false', 99999);
            } else {
                $('#suggestions').attr("style", "display: block");
                setCookie('suggestions', 'true', 99999);
            }
        }
    </script>

{% endblock scriptblock %}
