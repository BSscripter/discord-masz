{% extends 'base.html.twig' %}
{% block body %}
    {% include 'navbar.html.twig' %}
    <div class="container">
        <div class="d-flex justify-content-between align-items-start">
            <h3><span class="badge badge-success">New ModCase</span></h3>
        </div>
        <br>
        <div class="d-flex flex-wrap">
            <div class="md-form flex-grow-1">
                <input type="text" id="form-userid" class="form-control">
                <label for="form-userid">UserId</label>
            </div>
            <div class="flex-grow-1">
                <label for="form-severity">Severity</label>
                <select id="form-severity" class="form-control browser-default custom-select">
                    <option selected>Low</option>
                    <option>Normal</option>
                    <option>High</option>
                    <option>Epic</option>
                </select>
            </div>
        </div>
        <div class="">
            <div class="md-form d-flex flex-row">
                <label>Labels</label>
                <input type="text" id="form-label-new" class="form-control flex-shrink-1" style="width:20%"/>
                <button class="btn btn-default" id="form-labels-button" onclick="labelButton()">Add label <i class="fas fa-plus ml-1"></i></button>
            </div>
            <ul id="form-labels" class="list-group list-group-horizontal-lg d-flex flex-wrap"
                style="list-style: none;" id="form-labels">
            </ul>
        </div>

        <div class="md-form">
            <input type="text" id="form-title" class="form-control">
            <label for="form-title">Title</label>
        </div>

        <div class="md-form">
            <textarea id="form-description" class="form-control md-textarea"></textarea>
            <label for="form-description">Description</label>
        </div>
        <div class="">
            <label for="form-punishment">Punishment</label>
            <select id="form-punishment" class="form-control browser-default custom-select">
                <option>Warn</option>
                <option>Mute</option>
                <option>TempMute</option>
                <option>Kick</option>
                <option>Ban</option>
                <option>TempBan</option>
                <option>Notice</option>
                <option>None</option>
            </select>
        </div>
        <div class="md-form" style="display: none">
            <label for="form-punished-until">Punished until</label>
            <input type="text" id="form-punished-until" class="form-control datepicker">
        </div>
        <br>
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="form-send-notification" checked>
            <label class="custom-control-label" for="form-send-notification">Send notification?</label>
        </div>
        <br>
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="form-handle-punishment" checked>
            <label class="custom-control-label" for="form-handle-punishment">Handle punishment?</label>
        </div>
        <div class="md-form">
            <button type="submit" id="form-submit" name="submit" onclick="submitButton()"
                    class="btn btn-success btn-lg btn-block waves-effect waves-light">CREATE CASE</button>
        </div>
        <br>
        <div role="alert" aria-live="assertive" aria-atomic="true" class="toast" data-autohide="false" id="notification" style="min-width:100%">
            <div class="toast-header">
                <svg class=" rounded mr-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
                     preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
                    <rect fill="#007aff" width="100%" height="100%" id="notificationColor" /></svg>
                <strong class="mr-auto" id="notificationTitle">Post comment</strong>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body" id="notificationBody">
                Hello, world! This is a toast message.
            </div>
        </div>
    </div>

    <style>
        .custom-label {
            cursor: pointer;
        }
    </style>

{% endblock body %}

{% block scriptblock %}
    <script>
        $(document).ready(function () {
            $('.datepicker').pickadate(options = {
                format: 'yyyy-mm-dd',
            } );

            $('.datepicker').change(function(x) {
                if ($(x.target).val()) { $(x.target).val($(x.target).val() + "T00:00:00"); }
            });

            let punishment = $('#form-punishment').val();
            if (punishment.includes('Temp')) {
                $('#form-punished-until').closest("div").css("display", "block");
            } else {
                $('#form-punished-until').closest("div").css("display", "none");
            }

            $("#form-label-new").on('keydown', function (e) {
                if (e.shiftKey) { return; }
                if (e.key === 'Enter' || e.keyCode === 13) {
                    labelButton();
                }
            });
        });

        $('#form-punishment').change(function() {
            let punishment = $('#form-punishment').val();
            if (punishment.includes('Temp')) {
                $('#form-punished-until').closest("div").css("display", "block");
            } else {
                $('#form-punished-until').closest("div").css("display", "none");
            }
        });

        function showNotification(element, title, body, color="#ac000f", insertAfter=true) {
            if (insertAfter) {
                $('#notification').insertAfter($(element));
            } else {
                $('#notification').insertBefore($(element));
            }

            $('#notificationColor').attr('fill', color);
            $('#notificationTitle').text(title);
            $('#notificationBody').text(body);
            $('#notification').toast('show');
        }

        function labelButton() {
            let val = $('#form-label-new').val();
            if (val) {
                $('#notification').toast('hide');
                $('#form-labels').append("<h4><span title=\"Click to delete\" onclick=\"removeLabel(this)\" class=\"badge badge-pill badge-info mr-1 custom-label\">" + val + "</span></h4>");
                $('#form-label-new').val("");
            } else {
                showNotification($('#form-labels'), 'Cannot add empty label.', 'Please write something first.', "#ac000f", false)
            }
        }

        function submitButton() {
            let labels = new Array();
            $('.custom-label').each(function(i, obj) {
                labels.push($(obj).text());
            })
            let severity = $('#form-severity').val();
            let punishment = $('#form-punishment').val();
            let punishmentType = $('#form-punishment').val();
            let punishedUntil = $('#form-punished-until').val();

            // fix datetimes

            // map
            let mappedPunishmentType = 0;
            switch(punishmentType) {
                case "TempMute":
                    mappedPunishmentType = 1;
                    if (!punishedUntil) {
                        punishment = "Mute";
                    }
                    break;
                case "Mute":
                    mappedPunishmentType = 1;
                    punishedUntil = null;
                    break;
                case "Kick":
                    mappedPunishmentType = 2;
                    punishedUntil = null;
                    break;
                case "TempBan":
                    mappedPunishmentType = 3;
                    if (!punishedUntil) {
                        punishment = "Ban";
                    }
                    break;
                case "Ban":
                    mappedPunishmentType = 3;
                    punishedUntil = null;
                    break;
            }

            let mappedSeverity = 0;
            switch(severity) {
                case "Normal":
                    mappedSeverity = 1;
                    break;
                case "High":
                    mappedSeverity = 2;
                    break;
                case "Epic":
                    mappedSeverity = 3;
                    break;
            }

            // params

            let sendNotification = $('#form-send-notification').is(":checked").toString();
            let handlePunishment = $('#form-handle-punishment').is(":checked").toString();

            // body

            let body = {
                'title': $('#form-title').val().trim(),
                'description': $('#form-description').val().trim(),
                'userid': $('#form-userid').val().trim(),
                'severity': mappedSeverity,
                'labels': labels,
                'punishment': punishment,
                'punishmentType': mappedPunishmentType,
                'punishedUntil': punishedUntil
            };

            // request

            $.ajax({
                type: "POST",
                url: "/api/v1/modcases/{{ basic_data.currentGuild }}?sendnotification=" + sendNotification + "&handlePunishment=" + handlePunishment,
                data: JSON.stringify(body),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data){
                    location.href = '/modcases/{{ basic_data.currentGuild }}/' + data['caseid'];
                },
                error: function(errMsg) {
                    if (errMsg.status === 201) {  // success
                        location.href = '/modcases/{{ basic_data.currentGuild }}/' + errMsg['caseid'];
                        return;
                    }
                    showNotification($('#form-submit'), 'Creating case failed', errMsg.status + ": " + errMsg.responseText);
                }
            });
        }

        function removeLabel(label) {
            $(label).remove();
        }
    </script>
{% endblock %}



