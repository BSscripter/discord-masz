{% extends 'base.html.twig' %}
{% block body %}
    {% include 'navbar.html.twig' %}
    <div class="container">
        <div class="d-flex justify-content-between align-items-start">
            <h3><span class="badge badge-primary">Edit guild</span></h3>
        </div>
        {% if guildconfig|default %}
            <div class="card m-3" id="form-guild">
                <div class="card-body d-flex flex-row">
                    <div class="align-self-start mr-3">
                        <img
                                src=""
                                class="card-img rounded-circle z-depth-0 mr-1"
                                alt="avatar icon"
                                height="35"
                                style="width: unset"
                                id="form-guild-img"
                        />
                    </div>
                    <div class="flex-grow-1">
                        <h4 class="card-title" id="form-guild-title"></h4>
                    </div>
                </div>
            </div>
            <div class="d-flex flex-row flex-wrap" id="form-roles">
                <label for="form-mod-role" id="form-mod-label-role">Moderator Role</label>
                <select class="browser-default custom-select m-3" id="form-mod-role"></select>
                <label for="form-admin-role" id="form-admin-label-role">Admin Role</label>
                <select class="browser-default custom-select m-3" id="form-admin-role"></select>
                <label for="form-muted-role" id="form-muted-label-role">Muted Role for punishment</label>
                <select class="browser-default custom-select m-3" id="form-muted-role"></select>
            </div>
            <div id="form-webhooks">
                <label for="form-webhook-public">OPTIONAL: Webhook URL: public notification</label>
                <input type="text" id="form-webhook-public" class="form-control m-2">
                <label for="form-webhook-internal">OPTIONAL: Webhook URL: internal notification</label>
                <input type="text" id="form-webhook-internal" class="form-control m-2">
            </div>
            <button type="button" class="btn btn-primary" id="form-submit" onclick="updateGuild(this)">Update guild</button>
        {% endif %}
    </div>
{% endblock body %}

{% block scriptblock %}
    <script>
        function intToColor(val) {
            if (val === 0) {
                return '#000000';
            }
            return '#' + val.toString(16);
        }

        var guildConfig;
        $(document).ready(function() {
            guildConfig = {{ guildconfig|json_encode|raw }};
            if (!guildConfig) {
                return;
            }

            $('#form-webhook-internal').val(guildConfig['modInternalNotificationWebhook']);
            $('#form-webhook-public').val(guildConfig['modPublicNotificationWebhook']);
            let guildId = guildConfig['guildId'];
            $.ajax({
                type: "GET",
                url: "/api/v1/discord/guilds/" + guildId,
                success: function (data) {
                    $('#form-guild-title').text(data['name']);
                    $('#form-guild-img').attr('src', 'https://cdn.discordapp.com/icons/' + guildId + '/' + data['icon'] + '.png');
                    let modRoles = $('#form-mod-role');
                    let adminRoles = $('#form-admin-role');
                    let mutedRoles = $('#form-muted-role');
                    modRoles.append('<option selected>Moderator role</option>');
                    adminRoles.append('<option selected>Admin role</option>');
                    mutedRoles.append('<option selected>Muted role for punishment</option>');
                    $.each(data['roles'], function(i, val) {
                        if (val['id'] === guildConfig['modRoleId']) {
                            modRoles.append(
                                $('<option selected></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        } else {
                            modRoles.append(
                                $('<option></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        }
                        if (val['id'] === guildConfig['adminRoleId']) {
                            adminRoles.append(
                                $('<option selected></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        }else {
                            adminRoles.append(
                                $('<option></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        }
                        if (val['id'] === guildConfig['mutedRoleId']) {
                            mutedRoles.append(
                                $('<option selected></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        }else {
                            mutedRoles.append(
                                $('<option></option>').text(val['name']).attr('value', val['id']).attr('style', 'color:' + intToColor(val['color']))
                            );
                        }
                    });
                },
                error: function (errMsg) {
                    handleRequestError(errMsg, "Fetching current guild info failed");
                }
            });
        });

        function updateGuild(button) {
            let iWebhook = $('#form-webhook-internal').val();
            let pWebhook = $('#form-webhook-public').val();
            let mRole = $('#form-muted-role').val();
            let obj = {
                'modroleid': $('#form-mod-role').val(),
                'adminroleid': $('#form-admin-role').val(),
                'mutedroleid': mRole === "Muted role for punishment" ? null : mRole,
                'modInternalNotificationWebhook': iWebhook ? iWebhook : null,
                'modPublicNotificationWebhook': pWebhook ? pWebhook : null,
            };
            $.ajax({
                type: "PUT",
                url: "/api/v1/guilds/" + guildConfig['guildId'],
                data: JSON.stringify(obj),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    location.href = '/modcases/' + guildConfig['guildId'];
                },
                error: function (errMsg) {
                    if (errMsg.status === 200) {  // success
                        location.href = '/modcases/' + guildConfig['guildId'];
                        return;
                    }
                    handleRequestError(errMsg, "Updating guild failed");
                }
            });
        }
    </script>
{% endblock scriptblock %}
