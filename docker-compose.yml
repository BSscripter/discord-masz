version: '2.2'

volumes:
  php_share:
  mysql:
  filehost:

services:
  db:
    container_name: masz_db
    image: mysql:5.7
    volumes:
        - mysql:/var/lib/mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_ROOT_HOST=%
    expose:
      - "3306"
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    networks:
      - appnetwork

  backend:
    build: 
      context: backend
      args: 
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_PORT=${MYSQL_PORT}
        - MYSQL_HOST=db
        - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
        - DISCORD_OAUTH_CLIENT_ID=${DISCORD_OAUTH_CLIENT_ID}
        - DISCORD_OAUTH_CLIENT_SECRET=${DISCORD_OAUTH_CLIENT_SECRET}
        - DISCORD_SITE_ADMINS=${DISCORD_SITE_ADMINS}
    container_name: masz_backend
    depends_on:
        db:
            condition: service_healthy
    restart: unless-stopped
    networks:
      - appnetwork
    volumes:
      - filehost:/filehost

  sf4_apache:
    build: apache
    container_name: masz_sf4_apache
    volumes:
      - ./apache/config/vhosts:/etc/apache2/sites-enabled
      - php_share:/home/wwwroot/sf4
    restart: unless-stopped
    depends_on:
      - php
    networks:
      - appnetwork

  php:
    build: 
      context: webinterface
      args: 
       - DEPLOY_MODE=${DEPLOY_MODE}
    container_name: masz_sf4_php
    restart: unless-stopped
    volumes:
      - php_share:/home/wwwroot/sf4
    networks:
      - appnetwork

  nginx:
    build: 
      context: nginx
      args:
        - DEPLOY_DOMAIN=${DEPLOY_DOMAIN}
    container_name: masz_nginx
    restart: unless-stopped
    depends_on:
        - db
        - backend
        - sf4_apache
    restart: unless-stopped
    ports:
      - "5565:80"
    networks:
    - appnetwork

  discordbot:
    build: discordbot
    container_name: masz_discordbot
    restart: unless-stopped
    networks:
      - appnetwork
    environment:
      - BOT_PREFIX=${BOT_PREFIX}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - META_SERVICE_BASE_URL=${META_SERVICE_BASE_URL}
      - MYSQL_HOST=db
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}

networks:
  appnetwork:
    driver: bridge
